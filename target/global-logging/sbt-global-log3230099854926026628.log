[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ELCOT\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ELCOT\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 16.0.1)
[debug]       Load.loadUnit: plugins took 1086.1893ms
[debug]       Load.loadUnit: defsScala took 1.4742ms
[debug] [Loading] Scanning directory C:\Users\ELCOT\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ELCOT\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 70.9192 ms
[debug]           Load.resolveProject(global-plugins) took 308.1036ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ELCOT\.sbt\1.0\plugins, plugins: List(<none>))) took 545.5234ms
[debug] [Loading] Done in C:\Users\ELCOT\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 941.98ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.2674ms
[debug]     Load.loadUnit(file:/C:/Users/ELCOT/.sbt/1.0/plugins/, ...) took 2090.0373ms
[debug]   Load.apply: load took 3692.3671ms
[debug]   Load.apply: resolveProjects took 21.4533ms
[debug]   Load.apply: finalTransforms took 336.986ms
[debug]   Load.apply: config.delegates took 36.5743ms
[debug]   Load.apply: Def.make(settings)... took 7239.3875ms
[debug]   Load.apply: structureIndex took 666.0016ms
[debug]   Load.apply: mkStreams took 4.0056ms
[info] loading global plugins from C:\Users\ELCOT\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 42664.1446ms
[debug]           Load.loadUnit: plugins took 563.2726ms
[debug]           Load.loadUnit: defsScala took 0.9904ms
[debug] [Loading] Scanning directory C:\Users\ELCOT\Desktop\Practice 2\project
[debug]             Load.loadUnit: mkEval took 248.5058ms
